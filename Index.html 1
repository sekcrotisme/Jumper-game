<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>YOCTOsnake</title>
  <style>
    body {
      background-color: #0f0f0f;
      color: #00ff99;
      text-align: center;
      font-family: 'Segoe UI', sans-serif;
      margin: 0;
      padding: 0;
    }

    h1 {
      padding: 1rem;
    }

    canvas {
      background-color: #111;
      display: block;
      margin: 0 auto;
      border: 2px solid #00ff99;
    }
  </style>
</head>
<body>
  <h1>üêç YOCTOsnake</h1>
  <canvas id="gameCanvas" width="400" height="400"></canvas>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");

    const gridSize = 20;
    const tileCount = canvas.width / gridSize;

    let snake = [{ x: 10, y: 10 }];
    let velocity = { x: 0, y: 0 };
    let food = { x: 15, y: 15 };
    let score = 0;

    function gameLoop() {
      const head = { x: snake[0].x + velocity.x, y: snake[0].y + velocity.y };

      // Game over jika menabrak dinding atau dirinya sendiri
      if (
        head.x < 0 || head.x >= tileCount ||
        head.y < 0 || head.y >= tileCount ||
        snake.some(segment => segment.x === head.x && segment.y === head.y)
      ) {
        alert("Game Over! Skor: " + score);
        snake = [{ x: 10, y: 10 }];
        velocity = { x: 0, y: 0 };
        score = 0;
        return;
      }

      snake.unshift(head);

      // Jika makan makanan
      if (head.x === food.x && head.y === food.y) {
        score++;
        food = {
          x: Math.floor(Math.random() * tileCount),
          y: Math.floor(Math.random() * tileCount),
        };
      } else {
        snake.pop();
      }

      draw();
    }

    function draw() {
      ctx.fillStyle = "#111";
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      // Gambar ular
      ctx.fillStyle = "#00ff99";
      for (const segment of snake) {
        ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize - 2, gridSize - 2);
      }

      // Gambar makanan
      ctx.fillStyle = "#ff5050";
      ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize - 2, gridSize - 2);
    }

    document.addEventListener("keydown", (e) => {
      switch (e.key) {
        case "ArrowUp":
          if (velocity.y === 0) velocity = { x: 0, y: -1 };
          break;
        case "ArrowDown":
          if (velocity.y === 0) velocity = { x: 0, y: 1 };
          break;
        case "ArrowLeft":
          if (velocity.x === 0) velocity = { x: -1, y: 0 };
          break;
        case "ArrowRight":
          if (velocity.x === 0) velocity = { x: 1, y: 0 };
          break;
      }
    });

    setInterval(gameLoop, 150);
  </script>
</body>
</html>
